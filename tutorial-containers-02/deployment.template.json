{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "kwsdiaacr": {
                "username": "${REGISTRY_USERNAME}",
                "password": "${REGISTRY_PASSWORD}",
                "address": "${REGISTRY_ADDRESS}"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.1",
              "createOptions": {
                "HostConfig": {
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  }
                }
              }
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.1",
              "createOptions": {
                "ExposedPorts": {
                  "9600/tcp": {}
                },
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ],
                    "9600/tcp": [
                      {
                        "HostPort": "9602"
                      }
                    ]
                  },
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  }
                }
              }
            }
          }
        },
        "modules": {
          "diajetsoncam": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.diajetsoncam}",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/tmp/argus_socket:/tmp/argus_socket"
                  ],
                  "PortBindings": {
                    "8000/tcp": [
                      {
                        "HostPort": "8000"
                      }
                    ]
                  },
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  },
                  "Privileged": true,
                  "Runtime": "nvidia"
                }
              }
            }
          },
          "qwiicbutton": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.qwiicbutton}",
              "createOptions": {
                "HostConfig": {
                  "Devices": [
                    {
                      "PathOnHost": "/dev/i2c-1",
                      "PathInContainer": "/dev/i2c-1",
                      "CgroupPermissions": "mrw"
                    }
                  ],
                  "Privileged": true,
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  }
                }
              }
            }
          },
          "qwiicgps": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.qwiicgps}",
              "createOptions": {
                "HostConfig": {
                  "Devices": [
                    {
                      "PathOnHost": "/dev/i2c-1",
                      "PathInContainer": "/dev/i2c-1",
                      "CgroupPermissions": "mrw"
                    }
                  ],
                  "Privileged": true,
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  }
                }
              }
            }
          },
          "pistorage": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azure-blob-storage:latest",
              "createOptions": {
                "HostConfig": {
                  "Binds": [
                    "/data:/blobroot"
                  ],
                  "PortBindings": {
                    "11002/tcp": [
                      {
                        "HostPort": "11002"
                      }
                    ]
                  },
                  "LogConfig": {
                    "Type": "json-file",
                    "Config": {
                      "max-size": "10m",
                      "max-file": "3"
                    }
                  }
                }
              }
            },
            "env": {
              "LOCAL_STORAGE_ACCOUNT_NAME": {
                "value": "pistore"
              },
              "LOCAL_STORAGE_ACCOUNT_KEY": {
                "value": "${LOCAL_STORAGE_ACCOUNT_KEY}"
              }
            }
          },
          "edgeinference": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "${MODULES.edgeinference}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "8500/tcp": [
                      {
                        "HostPort": "8500"
                      }
                    ]
                  },
                  "Binds": [
                    "/home/nano/models:/app/models"
                  ],
                  "Runtime": "nvidia"
                }
              }
            },
            "env": {
              "CLOUD_STORAGE_MODEL_CONNECTION": {
                "value": "${CLOUD_STORAGE_MODEL_CONNECTION}"
              },
              "MODEL_VERSION": {
                "value": "${MODEL_VERSION}"
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "pistorageToIoTHub": "FROM /messages/modules/pistorage/outputs/* INTO $upstream",
          "qwiicbuttonToDiaRpiCam": "FROM /messages/modules/qwiicbutton/outputs/* INTO BrokeredEndpoint(\"/modules/diajetsoncam/inputs/input1\")",
          "qwiicgpsToDiaRpiCam": "FROM /messages/modules/qwiicgps/outputs/output1 INTO BrokeredEndpoint(\"/modules/diajetsoncam/inputs/input2\")",
          "diajetsoncamToIoTHub": "FROM /messages/modules/diajetsoncam/outputs/* INTO $upstream",
          "edgeinferenceToIoTHub": "FROM /messages/modules/edgeinference/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    },
    "pistorage": {
      "properties.desired": {
        "deviceAutoDeleteProperties": {
          "deleteOn": false,
          "deleteAfterMinutes": 1440,
          "retainWhileUploading": true   
        },
        "deviceToCloudUploadProperties": {
          "uploadOn": true,
          "uploadOrder": "OldestFirst",
          "cloudStorageConnectionString": "${CLOUD_STORAGE_CONNECTION}",
          "storageContainersForUpload": {
            "localcont1": {
              "target": "diaiotimages"
            },
            "localcont1results": {
              "target": "diaiotimages-results"
            }
          },
          "deleteAfterUpload": true
        }
      }
    },
    "diajetsoncam": {
      "properties.desired": {
        "exposureMode": "Sports",
        "fps": 90
      }
    }
  }
}